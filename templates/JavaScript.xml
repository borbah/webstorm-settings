<templateSet group="JavaScript">
  <template name="con" value="console.log('$PARAM1$', $PARAM2$);" description="Console log with params" toReformat="false" toShortenFQNames="true">
    <variable name="PARAM2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cl" value="console.log($PARAM$);" description="simple console log" toReformat="false" toShortenFQNames="true">
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="import" value="import $PARAM1$ from '$PARAM2$';" description="simple import" toReformat="false" toShortenFQNames="true">
    <variable name="PARAM1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="importbr" value="import { $PARAM1$ } from '$PARAM2$';" description="import with brackets" toReformat="false" toShortenFQNames="true">
    <variable name="PARAM1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rclass" value="class $PARAM1$ extends Component {&#10;    render() {&#10;        return (&#10;            &lt;div&gt;&#10;                $PARAM2$&#10;            &lt;/div&gt;&#10;        )&#10;    }&#10;}" description="create simple react class" toReformat="false" toShortenFQNames="true">
    <variable name="PARAM1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rfunc" value="const $PARAM1$ = (props) =&gt; {&#10;    return (&#10;        $PARAM2$&#10;    )&#10;}" description="react functional component" toReformat="false" toShortenFQNames="true">
    <variable name="PARAM1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="=&gt;" value="($PARAMS$) =&gt; {&#10;    $FUNCTION$&#10;}" description="arrow function" toReformat="false" toShortenFQNames="true">
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="importr" value="import React from 'react';" description="Import react" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="importrc" value="import React, { Component } from 'react'; " description="import react with component" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="t." value="this.$PARAM$" description="this." toReformat="false" toShortenFQNames="true">
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cr" value="${ $PARAM$ }$PARAM2$" description="curly braces variable" toReformat="false" toShortenFQNames="true">
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ifs" value="if ($PARAM1$) {&#10;  $PARAM2$&#10;} else {&#10;  $PARAM3$&#10;}" description="if statement" toReformat="false" toShortenFQNames="true">
    <variable name="PARAM1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM3" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ed" value="export default $1$" description="export default" toReformat="false" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="storyimport" value="import React from 'react';&#10;import { storiesOf } from '@storybook/react';&#10;import $component$ from './$component$'; &#10;&#10;storiesOf('$type$/$component$', module)&#10;  .add('Default', () =&gt; &lt;$component$ /&gt;);" description="" toReformat="false" toShortenFQNames="true">
    <variable name="component" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="type" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>